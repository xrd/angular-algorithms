.algorithm{ 'ng-controller' => 'HeapsortCtrl' }

  %h3 Steps
  %ol
    %li First step: heap is built out of the data
    %li Heap is binary tree, but using a simple array.
    %li 
      Algorithm for finding node:
      %pre 
        &nbsp;
        iParent = floor(i-1)/2
        iLeftChild = 2*i + 1
        iRightChild = 2*i + 2
        &nbsp;
    %li Items are placed into heap, tree structure where top item at a node dominates all others.
    %li After put into heap, items are extracted one by one to build sorted array.

  %h3 Notes on heaps
  %ol
    %li All nodes dominate their children
    %li Insertion: put node at the bottom, and then bubble the node up.
    %li Deletion: remove the node, then bubble down the node until it satisfies the dominating properties.
    

  %h3 Comparisons
  %ol
    %li
      Competes with Quicksort. 
    %li Heapsort is better against attacks because it cannot ever be O(n^2) like Quicksort
    %li Embedded systems often use Heapsort because auxiliary storage is bounded and runtime is constrained.
    %li Competes with Merge sort. Merge sort uses 

  #placeholder{ "style" => "width:600px;height:300px;" }
    




